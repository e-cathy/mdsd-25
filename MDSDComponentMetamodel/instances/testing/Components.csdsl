ComponentSystem {
	repositories {
		Repository {
			
		components { BasicComponent WebGUI { providedInterfaces ( HTTP ) requiredInterfaces ( MediaStore ) providedServices { Service s for "HTTP.HTTPUpload" , Service s for "HTTP.HTTPDownload" } } , BasicComponent MediaManager { providedInterfaces ( MediaStore ) requiredInterfaces ( AudioDB , Sound ) providedServices { Service s for "MediaStore.download" , Service s for "MediaStore.upload" } } , BasicComponent DBCache { providedInterfaces ( AudioDB ) requiredInterfaces ( AudioDB ) providedServices { Service s for "AudioDB.queryDB" , Service s for "AudioDB.addFile" } } , BasicComponent DigitalWatermarking { providedInterfaces ( Sound ) providedServices { Service s for "Sound.watermark" } } , BasicComponent PoolingAudioDB { providedInterfaces ( AudioDB ) providedServices { Service s for "AudioDB.queryDB" , Service s for "AudioDB.addFile" } } } interfaces { Interface HTTP { void HTTPDownload ( ) ; void HTTPUpload ( ) ; } , Interface MediaStore { void download ( ) ; void upload ( ) ; } , Interface Sound { void watermark ( ) ; } , Interface AudioDB { void queryDB ( ) ; void addFile ( ) ; } } }
	}
systems { System { interfaces ( HTTP ) assembly Assembly { assemblyContexts { AssemblyContext PoolingAudioDB { component PoolingAudioDB providedRoles { Role "R AudioDB PA" from AudioDB } } , AssemblyContext WebGUI { component WebGUI providedRoles { Role "R HTTP WebGUI" from HTTP } requiredRoles { Role "R MediaStore WebGUI" from MediaStore } } } } allocation Allocation { } environment Environment { links { Link ServerLink { ApplicationServer <=> DatabaseServer } } containers { Container ApplicationServer { links ( ServerLink ) } , Container DatabaseServer { links ( ServerLink ) } } } } } }