/*
 * generated by Xtext 2.38.0
 */
package org.xtext.componentsystem.dsl.formatting2

import MDSDComponentMetamodel.ComponentSystem
import MDSDComponentMetamodel.SystemIndependant.Repository
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.componentsystem.dsl.services.DslGrammarAccess

class DslFormatter extends AbstractFormatter2 {
	
	@Inject extension DslGrammarAccess

	def dispatch void format(ComponentSystem componentSystem, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (repository : componentSystem.repositories) {
			repository.format
		}
		for (system : componentSystem.systems) {
			system.format
		}
	}

	def dispatch void format(Repository repository, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (basicComponent : repository.components) {
			basicComponent.format
		}
		for (_interface : repository.interfaces) {
			_interface.format
		}
		for (type : repository.types) {
			type.format
		}
	}
	
	// TODO: implement for System, BasicComponent, Interface, Signature, Branch, Loop, Assembly, Allocation, Environment, AssemblyContext, CompositeComponent
}
